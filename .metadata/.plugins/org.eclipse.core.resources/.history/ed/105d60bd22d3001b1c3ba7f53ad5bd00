package ObserverPattern;

public class DriverClass {

    Subject fashionStore = new Store();
    
    Observer customer1 = new PassiveCustomer("Prakash");
    Observer customer2 = new ShopaholicCustomer("Bandana");
    Observer customer3 = new ShopaholicCustomer("Pooja");

    // Adding two customers to the newsletter
    
    fashionStore.add
    
    
//    fashionChainStores.addSubscriber(customer1);
//    fashionChainStores.addSubscriber(customer2);
//
//    // Notifying customers (observers)
//    fashionChainStores.notifySubscribers();
//
//    // A customer has decided not to continue following the newsletter
//    fashionChainStores.removeSubscriber(customer1);
//
//    // customer2 told customer3 that a sale is going on
//    fashionChainStores.addSubscriber(customer3);
//
//    // Notifying the updated list of customers
//    fashionChainStores.notifySubscribers();
}
